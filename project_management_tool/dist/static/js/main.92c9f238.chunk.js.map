{"version":3,"sources":["Components/layout/SignedInlinks.js","Components/actions/authActions.js","Components/layout/Signedoutlinks.js","Components/layout/Navbar.js","Components/projects/ProjectSummary.js","Components/projects/ProjectList.js","Components/dashboard/Notification.js","Components/dashboard/Dashboard.js","Components/projects/ProjectDetails.js","Components/auth/Signin.js","Components/auth/Signup.js","Components/projects/CreateProject.js","Components/actions/projectActions.js","App.js","serviceWorker.js","Components/Reducer/projectReducer.js","Components/Reducer/authReducer.js","Components/Reducer/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","Signedoutlink","state","console","log","firebase","links","uid","SignedInlinks","Signedoutlinks","Link","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","projects_ProjectSummary","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","Notification","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","projectReducer","arguments","length","undefined","action","iniState","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAyBeA,cAAQ,KANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,ECPR,SAACA,EAAUE,EAAXC,IACYC,EAD2BD,EAAjBC,eAGlBC,OAAOJ,UAAUK,KAAK,WAC7BN,EAAS,CAAEO,KAAM,2BDOVR,CApBO,SAACS,GACrB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,YACJQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAC3BJ,EAAMQ,QAAQC,eEDVC,EARK,WAChB,OACIT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,aCuBDf,cARS,SAACoB,GAEvB,OADAC,QAAQC,IAAI,QAAQF,EAAMG,UACpB,CACJjB,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAIbjB,CAxBA,SAACS,GAAU,IAChBH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QAGRO,EAAQlB,EAAKmB,IAAMf,EAAAC,EAAAC,cAACc,EAAD,CAAeT,QAASA,IAAcP,EAAAC,EAAAC,cAACe,EAAD,MAE/D,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAG,IAAIF,UAAU,cAAvB,aACCW,uBCDMK,EAZQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACvB,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAekB,EAAQC,OACvCtB,EAAAC,EAAAC,cAAA,sBAAcmB,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAasB,IAAOJ,EAAQK,UAAUC,UAAUC,eCStDC,EAdK,SAAAT,GAAgB,IAAdU,EAAcV,EAAdU,SACpB,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACX2B,GAAYA,EAASC,IAAI,SAAAV,GACzB,OACErB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAK,aAAegB,EAAQW,IAClChC,EAAAC,EAAAC,cAAC+B,EAAD,CAAgBZ,QAASA,EAASa,IAAKb,EAAQW,UCe1CG,EAtBO,SAACpC,GAAU,IACvBqC,EAAkBrC,EAAlBqC,cACR,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACViC,GAAiBA,EAAcL,IAAI,SAAAM,GACnC,OAAOrC,EAAAC,EAAAC,cAAA,MAAIgC,IAAKG,EAAKL,IACnBhC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAakC,EAAKC,KAAlC,KACAtC,EAAAC,EAAAC,cAAA,YAAOmC,EAAKE,SACZvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBsB,IAAOY,EAAKG,KAAKb,UAAUc,4CCL3EC,mLACK,IAAAC,EACmCC,KAAK7C,MAAvC+B,EADDa,EACCb,SAAUlC,EADX+C,EACW/C,KAAMwC,EADjBO,EACiBP,cACxB,OAAKxC,EAAKmB,IAGRf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC2C,EAAD,CAAaf,SAAUA,KAEzB9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAC4C,EAAD,CAAeV,cAAeA,OAThBpC,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBAHf2C,aA6BTC,cACb3D,YAVsB,SAACoB,GAEvB,MAAO,CACLoB,SAAUpB,EAAMwC,UAAUC,QAAQrB,SAClClC,KAAMc,EAAMG,SAASjB,KACrBwC,cAAe1B,EAAMwC,UAAUC,QAAQf,iBAMzCgB,2BAAiB,CACf,CAAEC,WAAY,WAAWC,QAAQ,CAAC,YAAY,SAC9C,CAAED,WAAY,gBAAiBE,MAAO,EAAED,QAAQ,CAAC,OAAO,WAJ7CL,CAMbP,GCAaO,cACb3D,YAZsB,SAACoB,EAAO8C,GAE9B,IAAMxB,EAAKwB,EAASC,MAAMC,OAAO1B,GAC3BF,EAAWpB,EAAMwC,UAAUS,KAAK7B,SAEtC,MAAO,CACLT,QAFcS,EAAWA,EAASE,GAAM,KAGxCpC,KAAMc,EAAMG,SAASjB,QAMvBwD,2BAAiB,CAAC,CAChBC,WAAY,cAHDJ,CAtCQ,SAAClD,GAAU,IACxBsB,EAAkBtB,EAAlBsB,QACR,OAD0BtB,EAATH,KACPmB,IACNM,EAEArB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAckB,EAAQC,OACtCtB,EAAAC,EAAAC,cAAA,SAAImB,EAAQkB,UAEdvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,wBAAgBmB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDxB,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAasB,IAAOJ,EAAQK,UAAUC,UAAUC,gBAOzE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,gCAnBgBF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,sBCJ9BuD,6MACHlD,MAAM,CACFmD,MAAM,GACNC,SAAS,MAEbC,aAAa,SAACC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOrC,GAAIgC,EAAEK,OAAOC,WAI/BC,aAAa,SAACP,GACVA,EAAEQ,iBACFP,EAAKlE,MAAM0E,OAAOR,EAAKvD,gFAGpB,IACAgE,EAAW9B,KAAK7C,MAAhB2E,UAGP,OAFc9B,KAAK7C,MAAZH,KAECmB,IAENf,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAITL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMyE,SAAU/B,KAAK2B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQkC,GAAG,QAAQ6C,SAAUjC,KAAKmB,gBAElD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,YACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWkC,GAAG,WAAW6C,SAAUjC,KAAKmB,gBAExD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACduE,EAAY1E,EAAAC,EAAAC,cAAA,SAAIwE,GAAe,eAzC1B1B,aA6DP1D,cAbO,SAACoB,GACnB,MAAM,CACFd,KAAMc,EAAMG,SAASjB,KACrB8E,UAAWhE,EAAMd,KAAK8E,YAIJ,SAACnF,GACvB,MAAM,CACFkF,OAAO,SAACK,GAAD,OAAUvF,GR9DHwF,EQ8DmBD,ER7D/B,SAACvF,EAASE,EAAV2B,IACezB,EADoByB,EAAfzB,eAEbC,OAAOoF,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdjE,KAAK,WACHN,EAAS,CAACO,KAAK,oBAChBmF,MAAM,SAAAC,GACL3F,EAAS,CAACO,KAAK,cAAcoF,aATpB,IAACH,KQkEPzF,CAA4CsE,GC9DpDuB,6MACHzE,MAAM,CACFmD,MAAM,GACNC,SAAS,GACTsB,UAAU,GACVC,SAAS,MAEbtB,aAAa,SAACC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOrC,GAAIgC,EAAEK,OAAOC,WAI/BC,aAAa,SAACP,GACVA,EAAEQ,iBACFP,EAAKlE,MAAMuF,OAAOrB,EAAKvD,gFAGpB,IAAAiC,EACiBC,KAAK7C,MAAtBH,EADA+C,EACA/C,KAAK8E,EADL/B,EACK+B,UAEZ,OAAG9E,EAAKmB,IAENf,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAITL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMyE,SAAU/B,KAAK2B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQkC,GAAG,QAAQ6C,SAAUjC,KAAKmB,gBAElD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,YACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWkC,GAAG,WAAW6C,SAAUjC,KAAKmB,gBAExD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,aAAf,cACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOkC,GAAG,YAAY6C,SAAUjC,KAAKmB,gBAErD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,YAAf,aACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOkC,GAAG,WAAW6C,SAAUjC,KAAKmB,gBAEpD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuE,EAAY1E,EAAAC,EAAAC,cAAA,SAAIwE,GAAe,eAlD9B1B,aAuEP1D,cAdS,SAACoB,GAErB,MAAM,CACJd,KAAMc,EAAMG,SAASjB,KACrB8E,UAAUhE,EAAMd,KAAK8E,YAID,SAACnF,GACvB,MAAM,CACF+F,OAAO,SAACC,GAAD,OAAYhG,ETjDH,SAACgG,GACrB,OAAO,SAAChG,EAAUE,EAAX+F,GAAqD,IAA/B7F,EAA+B6F,EAA/B7F,YAAa8F,EAAkBD,EAAlBC,aAClC5E,EAAWlB,IACXuD,EAAYuC,IAElB5E,EAASjB,OAAO8F,+BACdH,EAAQ1B,MACR0B,EAAQzB,UACRjE,KAAK,SAAA8F,GACL,OAAOzC,EAAUG,WAAW,SAASuC,IAAID,EAAKrD,KAAKvB,KAAK8E,IAAI,CAC1DT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB7E,SAAU+E,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAEnDxF,KAAK,WACNN,EAAS,CAAEO,KAAM,qBAChBmF,MAAM,SAACC,GACR3F,EAAS,CAAEO,KAAM,eAAgBoF,WSgCLI,CAAOC,OAI5BjG,CAA4C6F,WCvErDW,6MACFpF,MAAM,CACFY,MAAM,GACNiB,QAAQ,MAEZwB,aAAa,SAACC,GACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOrC,GAAIgC,EAAEK,OAAOC,WAI/BC,aAAa,SAACP,GACVA,EAAEQ,iBACF7D,QAAQC,IAAIqD,EAAKvD,OACjBuD,EAAKlE,MAAMgG,cAAc9B,EAAKvD,gFAKlC,OADckC,KAAK7C,MAAZH,KACEmB,IAMHf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMyE,SAAU/B,KAAK2B,aAAcpE,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,SAAf,SACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOkC,GAAG,QAAQ6C,SAAUjC,KAAKmB,gBAEjD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO0E,QAAQ,WAAf,mBACA5E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOkC,GAAG,UAAU6C,SAAUjC,KAAKmB,gBAEnD/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aAhBZH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBArBO2C,aAyDb1D,cAbO,SAACoB,GACnB,MAAM,CACFd,KAAMc,EAAMG,SAASjB,KACrB8E,UAAWhE,EAAMd,KAAK8E,YAKL,SAACnF,GACtB,MAAM,CACFwG,cAAc,SAAC1E,GAAD,OAAW9B,EC1DJ,SAAC8B,GAC1B,OAAO,SAAC9B,EAAUE,EAAX2B,GAAwC,IACvC8B,GAAYuC,EAD2BrE,EAAlBqE,gBAErBlF,EAAUd,IAAWoB,SAASN,QAC9ByF,EAAWvG,IAAWoB,SAASjB,KAAKmB,IAC1CmC,EAAUG,WAAW,YAAY4C,IAAjC9B,OAAA+B,EAAA,EAAA/B,CAAA,GACK9C,EADL,CAEEE,gBAAiBhB,EAAQ6E,UACzB5D,eAAgBjB,EAAQ8E,SACxBW,SAAUA,EACVtE,UAAW,IAAIyE,QACdtG,KAAK,WACNN,EAAS,CAAEO,KAAM,6BAChBmF,MAAM,SAAAC,GACP3F,EAAS,CAAEO,KAAM,wBAA0BoF,MD4CTa,CAAc1E,OAGzC/B,CAA4CwG,GEjC5CM,mLAjBX,OACEpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,KACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoG,EAAD,MACAtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACEvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjE,IACjC1C,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWC,IAC7C5G,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW/C,IACvC5D,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWxB,IACvCnF,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWb,cAXjC9C,aCGE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2DClBN,IAAMwD,EAAY,CACdnF,SAAU,CACR,CAACE,GAAI,IAAKV,MAAO,qBAAsBiB,QAAS,kBAChD,CAACP,GAAI,IAAKV,MAAO,wBAAyBiB,QAAS,kBACnD,CAACP,GAAI,IAAKV,MAAO,sBAAuBiB,QAAS,oBAkBtC2E,EAdQ,WAA+B,IAA9BxG,EAA8ByG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAOC,EAAOxH,MACV,IAAK,iBAEH,OADAa,QAAQC,IAAI,kBAAkB0G,EAAOjG,SAC9BX,EACT,IAAK,uBAEH,OADAC,QAAQC,IAAI,iBAAiB0G,EAAOpC,KAC7BxE,EACT,QACE,OAAOA,EAEb,OAAOA,GCnBL6G,EAAS,CACX7C,UAAU,MAsCC8C,EApCI,WAAyB,IAAxB9G,EAAwByG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlBI,EAASD,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAOC,EAAOxH,MACV,IAAK,cAED,OADIa,QAAQC,IAAI,eAChBuD,OAAA+B,EAAA,EAAA/B,CAAA,GACMzD,EADN,CAEGgE,UAAU,iBAGjB,IAAK,gBAED,OADA/D,QAAQC,IAAI,iBACZuD,OAAA+B,EAAA,EAAA/B,CAAA,GACOzD,EADP,CAEIgE,UAAU,OAElB,IAAK,kBAED,OADA/D,QAAQC,IAAI,mBACLF,EACX,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACZuD,OAAA+B,EAAA,EAAA/B,CAAA,GACOzD,EADP,CAEIgE,UAAU,OAElB,IAAK,eAED,OADA/D,QAAQC,IAAI,gBACZuD,OAAA+B,EAAA,EAAA/B,CAAA,GACOzD,EADP,CAEIgE,UAAU4C,EAAOpC,IAAIuC,UAE5B,QACG,OAAO/G,YCvBJgH,EANKC,YAAgB,CAChC/H,KAAK4H,EACLnG,QAAQ6F,EACRhE,UAAU0E,mBACV/G,SAAUgH,4DCEZhH,IAASiH,cARE,CACTC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,kBAGrBvH,IAASqC,YAAYmF,SAAS,CAACC,uBAAsB,IACtCzH,QAAf,ECAI0H,EAAQC,YAAYd,EACtBzE,YACEwF,YAAgBC,IAAMC,kBAAkB,CAAChJ,0BAAa8F,+BACtDmD,6BAAmBC,EAAU,CAACC,YAAa,QAASC,wBAAwB,EAAMC,mBAAmB,IACrGC,yBAAeJ,KAMrBN,EAAMW,oBAAoBrJ,KAAK,WAC3BsJ,IAASC,OAAOpJ,EAAAC,EAAAC,cAACmJ,EAAA,EAAD,CAAUd,MAAOA,GAAOvI,EAAAC,EAAAC,cAACoJ,EAAD,OAAoBC,SAASC,eAAe,SLqGlF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9J,KAAK,SAAA+J,GACjCA,EAAaC","file":"static/js/main.92c9f238.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn =(credentials)=>{\r\n    return(dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch(err=>{\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        })\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n      const firebase = getFirebase();\r\n  \r\n      firebase.auth().signOut().then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n      });\r\n    }\r\n  }\r\n  export const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Signedoutlink=()=>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log in</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default Signedoutlink;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInlinks'\r\nimport Signedoutlink from './Signedoutlinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  \r\n \r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <Signedoutlink />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('state',state.firebase);\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to ={'/projects/' + project.id} >\r\n          <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        )\r\n      })}  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item =>{\r\n              return <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span>{item.content}</span>\r\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notification'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects',orderBy:['createdAt','desc'] },\r\n    { collection: 'notifications', limit: 3,orderBy:['time','desc']}\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' /> \r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div> <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  // console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","import React, { Component } from 'react';\r\nimport {signIn} from '../actions/authActions';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n class Signin extends Component {\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        this.props.signIn(this.state);\r\n\r\n    }\r\n  render() {\r\n    const {authError}=this.props;\r\n    const {auth}= this.props;\r\n    // console.log(this.props);\r\n    if(auth.uid){\r\n      return (\r\n      <Redirect to='/'/>\r\n      )\r\n      }\r\n    return (\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\"></h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                </div>\r\n                <div className=\"red-text center\">\r\n                {authError ? <p>{authError}</p>:null}\r\n                </div>\r\n            </form>\r\n          </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        signIn:(creds)=> dispatch(signIn(creds))\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signin);","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../actions/authActions';\r\n class Signup extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        this.props.signUp(this.state);\r\n\r\n    }\r\n  render() {\r\n    const {auth,authError}= this.props;\r\n    // console.log(this.props);\r\n    if(auth.uid){\r\n      return (\r\n      <Redirect to='/'/>\r\n      )\r\n      }\r\n    return (\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\"></h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\r\n                </div>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p>{authError}</p>:null}\r\n                </div>\r\n            </form>\r\n           </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    return{\r\n      auth: state.firebase.auth,\r\n      authError:state.auth.authError\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return{\r\n        signUp:(newUser)=> dispatch(signUp(newUser))\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nimport {createProject} from '../../Components/actions/projectActions';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nclass CreateProject extends Component {\r\n    state={\r\n        title:'',\r\n        content:''\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n\r\n    }\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        console.log(this.state);\r\n        this.props.createProject(this.state);\r\n\r\n    }\r\n  render() {\r\n    const {auth}= this.props;\r\n    if(!auth.uid){\r\n        return (\r\n        <Redirect to='/signin'/>\r\n        )\r\n        }\r\n    return (\r\n          <div className=\"container\">\r\n            <form onSubmit={this.handleSubmit} className=\"white\">\r\n                <h5 className=\"grey-text text-darken-3\"></h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Project content</label>\r\n                    <input type=\"text\" id=\"content\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n           </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        createProject:(project)=>dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      }).then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n      }).catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n      });\r\n    }\r\n  };","import React, { Component } from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\nimport Navbar from './Components/layout/Navbar';\nimport Dashboard from './Components/dashboard/Dashboard';\nimport  ProjectDetails from './Components/projects/ProjectDetails';\nimport Signin from './Components/auth/Signin';\nimport Signup from './Components/auth/Signup';\nimport CreateProject from './Components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route exact path='/projects/:id' component={ProjectDetails}/>\n            <Route exact path=\"/signin\" component={Signin}/>\n            <Route exact path=\"/signup\" component={Signup}/>\n            <Route exact path=\"/create\" component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n  }\r\n  \r\n  const projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n          console.log('project created',action.project);\r\n          return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n          console.log('Projects Error',action.err);\r\n          return state;\r\n        default:\r\n          return state;\r\n    }\r\n    return state;\r\n  };\r\n  \r\n  export default projectReducer;","const iniState={\r\n    authError:null\r\n};\r\nconst authReducer =(state=iniState,action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n                console.log('login error');\r\n            return{\r\n               ...state,\r\n               authError:'login failed'\r\n            }\r\n           \r\n        case 'LOGIN_SUCCESS':\r\n            console.log('LOGIN SUCCESS');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n         default:\r\n            return state\r\n        \r\n    }\r\n  \r\n}\r\nexport default authReducer;","import projectReducer from './projectReducer';\r\nimport authReducer from './authReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport  {firebaseReducer} from 'react-redux-firebase';\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nvar config = {\r\n    apiKey: \"AIzaSyCwTt5l5DDNvyry0YIchKEDEpiLv4mZkbE\",\r\n    authDomain: \"projectmanagementtool-5528b.firebaseapp.com\",\r\n    databaseURL: \"https://projectmanagementtool-5528b.firebaseio.com\",\r\n    projectId: \"projectmanagementtool-5528b\",\r\n    storageBucket: \"projectmanagementtool-5528b.appspot.com\",\r\n    messagingSenderId: \"1095775659373\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './Components/Reducer/rootReducer';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbconfig'\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n      reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n  );\n\n\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n  })\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\n\n"],"sourceRoot":""}